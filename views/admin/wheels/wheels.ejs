<script>
    let flag = {
        'requested-chairs': true,
        'approved-chairs': true,
        'returned-chairs': true,
    };
    const dropdownHandler = (params) => {
        let dropdown = document.getElementById(params);
        let open1 = document.getElementById(`${params}-open`);
        let close1 = document.getElementById(`${params}-close`);
        if (!flag.params) {
            dropdown.classList.add("opacity-0");
            dropdown.classList.add("-translate-y-4");
            setTimeout(() => {
                dropdown.classList.add("hidden");
            }, 200);
            open1.classList.add("hidden");
            close1.classList.remove("hidden");
            flag.params = true;
        } else {
            dropdown.classList.remove("hidden");
            setTimeout(() => {
                dropdown.classList.remove("opacity-0");
                dropdown.classList.remove("-translate-y-4");
            }, 200);
            close1.classList.add("hidden");
            open1.classList.remove("hidden");
            flag.params = false;
        }
        console.log(flag.params);
    };
</script>

<div class="p-4">
    <button
        class="focus:outline-none w-full  focus:ring-2 focus:ring-offset-2 -tr focus:ring-gray-500 focus:bg-gray-100 p-4 shadow rounded bg-white text-sm font-medium leading-none text-gray-800 flex items-center justify-between cursor-pointer"
        onclick="dropdownHandler('requested-chairs')">
        Requested Chairs Data
        <div class="">
            <div class="hidden" id="requested-chairs-close">
                <svg width="10" height="6" viewBox="0 0 10 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M5.00016 0.666664L9.66683 5.33333L0.333496 5.33333L5.00016 0.666664Z" fill="#1F2937" />
                </svg>
            </div>
            <div id="requested-chairs-open">
                <svg width="10" height="6" viewBox="0 0 10 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M5.00016 5.33333L0.333496 0.666664H9.66683L5.00016 5.33333Z" fill="#1F2937" />
                </svg>
            </div>
        </div>
    </button>
    <div class="w-full  mt-2 p-4 bg-white shadow overflow-x-scroll md:overflow-x-hidden transform transition-all duration-200 rounded"
        id="requested-chairs">

        <!-- list  -->
        <table class="table-auto border-collapse w-full">
            <thead>
                <tr class="search-class rounded-lg text-sm font-medium text-gray-700 text-left"
                    style="font-size: 0.9674rem">
                    <th class="px-4 py-2 bg-gray-200 " style="background-color:#f8f8f8">Name</th>
                    <th class="px-4 py-2 bg-gray-200 " style="background-color:#f8f8f8">Email</th>
                    <th class="px-4 py-2 " style="background-color:#f8f8f8">Contact</th>
                    <th class="px-4 py-2 " style="background-color:#f8f8f8">Address</th>
                    <th class="px-4 py-2 " style="background-color:#f8f8f8">Request Date</th>
                    <th class="px-4 py-2 " style="background-color:#f8f8f8">Accept</th>
                    <th class="px-4 py-2 " style="background-color:#f8f8f8">Reject</th>
                </tr>
            </thead>
            <tbody class="text-sm font-normal text-gray-700">
                <% wheeldata.request.forEach(function(data){ %>
                    <tr class="search-class hover:bg-gray-100 border-b border-gray-200 py-10">
                        <td class="px-4 py-4">
                            <%-data.name%>
                        </td>
                        <td class="px-4 py-4">
                            <%-data.email%>
                        </td>
                        <td class="px-4 py-4">
                            <%-data.contact%>
                        </td>
                        <td class="px-4 py-4">
                            <%-data.address%>
                        </td>
                        <td class="px-4 py-4">
                            <%-data.dateAdded%>
                        </td>
                        <td>
                            <button onclick="addIssueData({flag:false,id:'<%-data._id%>'})"
                                class="bg-blue-500 hover:bg-blue-400 text-white font-bold py-1 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded">
                                Accept
                            </button>
                        </td>
                        <td>
                            <button onclick="addRejectData({flag:false,id:'<%-data._id%>'})"
                                class="bg-red-500 hover:bg-red-400 text-white font-bold py-1 px-4 border-b-4 border-red-700 hover:border-red-500 rounded">
                                Reject
                            </button>
                        </td>
                    </tr>
                    <% }) %>
            </tbody>
        </table>
        <button
            class="focus:ring-2 focus:ring-offset-2 focus:ring-indigo-700 focus:outline-none focus:bg-indigo-200 text-xs bg-indigo-100 hover:bg-indigo-200 rounded-md mt-6 font-medium py-2 w-full leading-3 text-indigo-700"
            onclick="requestedChairsDownloader()">Download
            Excel</button>
    </div>
</div>

<div class="relative flex justify-center items-center">
    <div id="issuealert" class="z-10 w-full h-full hidden bg-gray-900 bg-opacity-80 top-0 fixed sticky-0">
        <div class="2xl:container  2xl:mx-auto py-48 px-4 md:px-28 flex justify-center items-center">
            <div
                class="w-96 md:w-auto dark:bg-gray-800 relative flex flex-col justify-center items-center bg-white py-16 px-4 md:px-24 xl:py-24 xl:px-36">
                <div role="banner">
                    <img src="https://s2.svgbox.net/illlustrations.svg?ic=walkie-talkie&color=000000" width="32"
                        height="32">
                </div>
                <div class="mt-12">
                    <div id="issuealertdata" class="hidden"></div>
                    <h1 role="main"
                        class="text-3xl dark:text-white lg:text-4xl font-semibold leading-7 lg:leading-9 text-center text-gray-800">
                        Are You Sure</h1>
                </div>
                <button onclick="sendIssueData()"
                    class="w-full dark:text-gray-800 dark:hover:bg-gray-100 dark:bg-white sm:w-auto mt-14 text-base leading-4 text-center text-white py-6 px-16 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-800 bg-gray-800 hover:bg-black">Mmm...
                    Yes!</button>
                <button onclick="showIssuealert(false)"
                    class="mt-6 dark:text-white dark:hover:border-white text-base leading-none focus:outline-none hover:border-gray-800 focus:border-gray-800 border-b border-transparent text-center text-gray-800">Nope..
                    Nopes</button>
                <button onclick="showIssuealert(false)"
                    class="text-gray-800 dark:text-gray-400 absolute top-8 right-8 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-800"
                    aria-label="close">
                    <img class="dark:hidden" src="https://tuk-cdn.s3.amazonaws.com/can-uploader/cookies-1-svg2.svg"
                        alt="close"></img>
                    <img class="dark:block hidden"
                        src="https://tuk-cdn.s3.amazonaws.com/can-uploader/cookies-1-svg2dark.svg" alt="close"></img>
                </button>
            </div>
        </div>
    </div>
</div>


<div class="relative flex justify-center items-center">
    <div id="rejectalert" class="z-10 w-full h-full hidden bg-gray-900 bg-opacity-80 top-0 fixed sticky-0">
        <div class="2xl:container  2xl:mx-auto py-48 px-4 md:px-28 flex justify-center items-center">
            <div
                class="w-96 md:w-auto dark:bg-gray-800 relative flex flex-col justify-center items-center bg-white py-16 px-4 md:px-24 xl:py-24 xl:px-36">
                <div role="banner">
                    <img src="https://s2.svgbox.net/illlustrations.svg?ic=walkie-talkie&color=000000" width="32"
                        height="32">
                </div>
                <div class="mt-12">
                    <div id="rejectalertdata" class="hidden"></div>
                    <h1 role="main"
                        class="text-3xl dark:text-white lg:text-4xl font-semibold leading-7 lg:leading-9 text-center text-gray-800">
                        Are You Sure</h1>
                </div>
                <button onclick="sendRejectData()"
                    class="w-full dark:text-gray-800 dark:hover:bg-gray-100 dark:bg-white sm:w-auto mt-14 text-base leading-4 text-center text-white py-6 px-16 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-800 bg-gray-800 hover:bg-black">Mmm...
                    Yes!</button>
                <button onclick="showRejectalert(false)"
                    class="mt-6 dark:text-white dark:hover:border-white text-base leading-none focus:outline-none hover:border-gray-800 focus:border-gray-800 border-b border-transparent text-center text-gray-800">Nope..
                    Nopes</button>
                <button onclick="showRejectalert(false)"
                    class="text-gray-800 dark:text-gray-400 absolute top-8 right-8 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-800"
                    aria-label="close">
                    <img class="dark:hidden" src="https://tuk-cdn.s3.amazonaws.com/can-uploader/cookies-1-svg2.svg"
                        alt="close"></img>
                    <img class="dark:block hidden"
                        src="https://tuk-cdn.s3.amazonaws.com/can-uploader/cookies-1-svg2dark.svg" alt="close"></img>
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    let issuealert = document.getElementById("issuealert");

    const showIssuealert = (flag) => {
        issuealert.classList.toggle("hidden");
    };
    const addIssueData = ({ flag, id }) => {
        showIssuealert(flag)
        const addData = document.getElementById('issuealertdata');
        addData.innerHTML = `${id}`
        console.log(`${id}`);
    }
    const sendIssueData = async () => {
        // post request to /approve-wheelchair/:reqID
        const id = document.getElementById('issuealertdata').innerHTML;
        showTopLoader();
        let responseData = await fetch(`/admin/approve-wheelchair/${id}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        responseData = await responseData.json();
        console.log(responseData);
        hideTopLoader();
        if (responseData.status === true) {
            showIssuealert(false);
            window.location.reload();
        }
    }


    let rejectalert = document.getElementById("rejectalert");

    const showRejectalert = (flag) => {
        rejectalert.classList.toggle("hidden");
    };
    const addRejectData = ({ flag, id }) => {
        showRejectalert(flag)
        const addData = document.getElementById('rejectalertdata');
        addData.innerHTML = `${id}`
        console.log(`${id}`);
    }
    const sendRejectData = async () => {
        // get request to /reject-wheelchair/:reqID
        const id = document.getElementById('rejectalertdata').innerHTML;
        showTopLoader();
        let responseData = await fetch(`/admin/reject-wheelchair/${id}`, {
            method: 'POST',
            headers: {
                'Content-type': 'application/json'
            }
        })
        responseData = await responseData.json();
        console.log(responseData);
        hideTopLoader();
        if (responseData.status === true) {
            showRejectalert(false);
            window.location.reload();
        }
    }
</script>


<div class="p-4">
    <button
        class="focus:outline-none w-full  focus:ring-2 focus:ring-offset-2 -tr focus:ring-gray-500 focus:bg-gray-100 p-4 shadow rounded bg-white text-sm font-medium leading-none text-gray-800 flex items-center justify-between cursor-pointer"
        onclick="dropdownHandler('approved-chairs')">
        Owned Chairs Data
        <div class="">
            <div class="hidden" id="approved-chairs-close">
                <svg width="10" height="6" viewBox="0 0 10 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M5.00016 0.666664L9.66683 5.33333L0.333496 5.33333L5.00016 0.666664Z" fill="#1F2937" />
                </svg>
            </div>
            <div id="approved-chairs-open">
                <svg width="10" height="6" viewBox="0 0 10 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M5.00016 5.33333L0.333496 0.666664H9.66683L5.00016 5.33333Z" fill="#1F2937" />
                </svg>
            </div>
        </div>
    </button>
    <div class="w-full  mt-2 p-4 bg-white shadow overflow-x-scroll md:overflow-x-hidden transform transition-all duration-200 rounded"
        id="approved-chairs">

        <!-- list  -->
        <table class="table-auto border-collapse w-full">
            <thead>
                <tr class="search-class rounded-lg text-sm font-medium text-gray-700 text-left"
                    style="font-size: 0.9674rem">
                    <th class="px-4 py-2 bg-gray-200 " style="background-color:#f8f8f8">Name</th>
                    <th class="px-4 py-2 bg-gray-200 " style="background-color:#f8f8f8">Email</th>
                    <th class="px-4 py-2 " style="background-color:#f8f8f8">Contact</th>
                    <th class="px-4 py-2 " style="background-color:#f8f8f8">Address</th>
                    <th class="px-4 py-2 " style="background-color:#f8f8f8">Date Added</th>
                    <th class="px-4 py-2 " style="background-color:#f8f8f8">Return</th>
                </tr>
            </thead>
            <tbody class="text-sm font-normal text-gray-700">
                <% wheeldata.approved.forEach(function(data){ %>
                    <tr class="search-class hover:bg-gray-100 border-b border-gray-200 py-10">
                        <td class="px-4 py-4">
                            <%-data.name%>
                        </td>
                        <td class="px-4 py-4">
                            <%-data.email%>
                        </td>
                        <td class="px-4 py-4">
                            <%-data.contact%>
                        </td>
                        <td class="px-4 py-4">
                            <%-data.address%>
                        </td>
                        <td class="px-4 py-4">
                            <%-data.dateAdded%>
                        </td>
                        <td>
                            <button onclick="addReturnData({flag:false,id:'<%-data._id%>'})"
                                class="bg-blue-500 hover:bg-blue-400 text-white font-bold py-1 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded">
                                Return
                            </button>
                        </td>
                    </tr>
                    <% }) %>
            </tbody>
        </table>
        <button
            class="focus:ring-2 focus:ring-offset-2 focus:ring-indigo-700 focus:outline-none focus:bg-indigo-200 text-xs bg-indigo-100 hover:bg-indigo-200 rounded-md mt-6 font-medium py-2 w-full leading-3 text-indigo-700"
            onclick="approvedChairsDownloader()">Download
            Excel</button>
    </div>
</div>


<div class="relative flex justify-center items-center">
    <div id="returnalert" class="z-10 w-full h-full hidden bg-gray-900 bg-opacity-80 top-0 fixed sticky-0">
        <div class="2xl:container  2xl:mx-auto py-48 px-4 md:px-28 flex justify-center items-center">
            <div
                class="w-96 md:w-auto dark:bg-gray-800 relative flex flex-col justify-center items-center bg-white py-16 px-4 md:px-24 xl:py-24 xl:px-36">
                <div role="banner">
                    <img src="https://s2.svgbox.net/illlustrations.svg?ic=walkie-talkie&color=000000" width="32"
                        height="32">
                </div>
                <div class="mt-12">
                    <div id="returnalertdata" class="hidden"></div>
                    <h1 role="main"
                        class="text-3xl dark:text-white lg:text-4xl font-semibold leading-7 lg:leading-9 text-center text-gray-800">
                        Are You Sure</h1>
                </div>
                <button onclick="sendReturnData()"
                    class="w-full dark:text-gray-800 dark:hover:bg-gray-100 dark:bg-white sm:w-auto mt-14 text-base leading-4 text-center text-white py-6 px-16 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-800 bg-gray-800 hover:bg-black">Mmm...
                    Yes!</button>
                <button onclick="showReturnalert(false)"
                    class="mt-6 dark:text-white dark:hover:border-white text-base leading-none focus:outline-none hover:border-gray-800 focus:border-gray-800 border-b border-transparent text-center text-gray-800">Nope..
                    Nopes</button>
                <button onclick="showReturnalert(false)"
                    class="text-gray-800 dark:text-gray-400 absolute top-8 right-8 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-800"
                    aria-label="close">
                    <img class="dark:hidden" src="https://tuk-cdn.s3.amazonaws.com/can-uploader/cookies-1-svg2.svg"
                        alt="close"></img>
                    <img class="dark:block hidden"
                        src="https://tuk-cdn.s3.amazonaws.com/can-uploader/cookies-1-svg2dark.svg" alt="close"></img>
                </button>
            </div>
        </div>
    </div>
</div>



<div class="p-4">
    <button
        class="focus:outline-none w-full  focus:ring-2 focus:ring-offset-2 -tr focus:ring-gray-500 focus:bg-gray-100 p-4 shadow rounded bg-white text-sm font-medium leading-none text-gray-800 flex items-center justify-between cursor-pointer"
        onclick="dropdownHandler('returned-chairs')">
        Returned Chairs Data
        <div class="">
            <div class="hidden" id="returned-chairs-close">
                <svg width="10" height="6" viewBox="0 0 10 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M5.00016 0.666664L9.66683 5.33333L0.333496 5.33333L5.00016 0.666664Z" fill="#1F2937" />
                </svg>
            </div>
            <div id="returned-chairs-open">
                <svg width="10" height="6" viewBox="0 0 10 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M5.00016 5.33333L0.333496 0.666664H9.66683L5.00016 5.33333Z" fill="#1F2937" />
                </svg>
            </div>
        </div>
    </button>
    <div class="w-full mt-2 p-4 bg-white shadow overflow-x-scroll md:overflow-x-hidden transform transition-all duration-200 rounded"
        id="returned-chairs">

        <!-- list  -->
        <table class="table-auto border-collapse w-full">
            <thead>
                <tr class="search-class rounded-lg text-sm font-medium text-gray-700 text-left"
                    style="font-size: 0.9674rem">
                    <th class="px-4 py-2 bg-gray-200 " style="background-color:#f8f8f8">Name</th>
                    <th class="px-4 py-2 bg-gray-200 " style="background-color:#f8f8f8">Email</th>
                    <th class="px-4 py-2 " style="background-color:#f8f8f8">Contact</th>
                    <th class="px-4 py-2 " style="background-color:#f8f8f8">Address</th>
                    <th class="px-4 py-2 " style="background-color:#f8f8f8">Date Added</th>
                    <th class="px-4 py-2 " style="background-color:#f8f8f8">Return Date</th>
                </tr>
            </thead>
            <tbody class="text-sm font-normal text-gray-700">
                <% wheeldata.returned.forEach(function(data){ %>
                    <tr class="search-class hover:bg-gray-100 border-b border-gray-200 py-10">
                        <td class="px-4 py-4">
                            <%-data.name%>
                        </td>
                        <td class="px-4 py-4">
                            <%-data.email%>
                        </td>
                        <td class="px-4 py-4">
                            <%-data.contact%>
                        </td>
                        <td class="px-4 py-4">
                            <%-data.address%>
                        </td>
                        <td class="px-4 py-4">
                            <%-data.dateIssued%>
                        </td>
                        <td class="px-4 py-4">
                            <%-data.dateReturned%>
                        </td>
                    </tr>
                    <% }) %>
            </tbody>
        </table>
        <button
            class="focus:ring-2 focus:ring-offset-2 focus:ring-indigo-700 focus:outline-none focus:bg-indigo-200 text-xs bg-indigo-100 hover:bg-indigo-200 rounded-md mt-6 font-medium py-2 w-full leading-3 text-indigo-700"
            onclick="returnedChairsDownloader()">Download
            Excel</button>
    </div>
</div>


<script>
    let returnalert = document.getElementById("returnalert");

    const showReturnalert = (flag) => {
        returnalert.classList.toggle("hidden");
    };
    const addReturnData = ({ flag, id }) => {
        showReturnalert(flag)
        const addData = document.getElementById('returnalertdata');
        addData.innerHTML = `${id}`
        console.log(`${id}`);
    }
    const sendReturnData = async () => {
        // post request to /approve-wheelchair/:reqID
        const id = document.getElementById('returnalertdata').innerHTML;
        showTopLoader();
        let responseData = await fetch(`/admin/return-wheelchair/${id}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        responseData = await responseData.json();
        console.log(responseData);
        hideTopLoader();
        if (responseData.status === true) {
            showReturnalert(false);
            window.location.reload();
        }
    }
</script>




<!-- common script to download excel sheets -->
<script>
    let wholeData = '<%- JSON.stringify(wheeldata) %>';
    wholeData = JSON.parse(wholeData)
    console.log(wholeData);


    const requestedChairsDownloader = () => {
        showTopLoader();
        let formattedData = [];
        let sno = 1;
        for (let i of wholeData.request) {
            formattedData.push({
                "sno": sno++,
                "Name": i.name,
                "Email": i.email,
                "Contact": i.contact,
                "Address": i.address,
                "status": i.status,
                "Date Added": i.dateAdded
            });
        }

        JSONToCSVConvertorProfileSection(formattedData, "Requested Chairs Data", true);
        hideTopLoader();
    }


    const approvedChairsDownloader = () => {
        showTopLoader();
        let formattedData = [];
        let sno = 1;
        for (let i of wholeData.approved) {
            formattedData.push({
                "sno": sno++,
                "Name": i.name,
                "Email": i.email,
                "Contact": i.contact,
                "Address": i.address,
                "status": i.status,
                "Date Added": i.dateAdded
            });
        }

        JSONToCSVConvertorProfileSection(formattedData, "Approved Chairs Data", true);
        hideTopLoader();
    }


    const returnedChairsDownloader = () => {
        showTopLoader();
        let formattedData = [];
        let sno = 1;
        for (let i of wholeData.returned) {
            formattedData.push({
                "sno": sno++,
                "Name": i.name,
                "Email": i.email,
                "Contact": i.contact,
                "Address": i.address,
                "status": i.status,
                "Date Added": i.dateAdded
            });
        }

        JSONToCSVConvertorProfileSection(formattedData, "Returned Chairs Data", true);
        hideTopLoader();
    }





    // helper functions to generate and download excel file
    function JSONToCSVConvertorProfileSection(JSONData, ReportTitle, ShowLabel) {
        //If JSONData is not an object then JSON.parse will parse the JSON string in an Object
        var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;

        var CSV = '\r\n\n';

        //This condition will generate the Label/Header
        if (ShowLabel) {
            var row = "";

            //This loop will extract the label from 1st index of on array
            for (var index in arrData[0]) {

                //Now convert each value to string and comma-seprated
                row += index + ',';
            }

            row = row.slice(0, -1);

            //append Label row with line break
            CSV += row + '\r\n';
        }

        //1st loop is to extract each row
        for (var i = 0; i < arrData.length; i++) {
            var row = "";

            //2nd loop will extract each column and convert it in string comma-seprated
            for (var index in arrData[i]) {
                row += '"' + arrData[i][index] + '",';
            }

            row.slice(0, row.length - 1);

            //add a line break after each row
            CSV += row + '\r\n';
        }

        if (CSV == '') {
            alert("Invalid data");
            return;
        }

        //Generate a file name
        var fileName = "";
        //this will remove the blank-spaces from the title and replace it with an underscore
        fileName += ReportTitle.replace(/ /g, "_");

        //Initialize file format you want csv or xls
        var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);

        // Now the little tricky part.
        // you can use either>> window.open(uri);
        // but this will not work in some browsers
        // or you will not get the correct file extension    

        //this trick will generate a temp <a /> tag
        var link = document.createElement("a");
        link.href = uri;

        //set the visibility hidden so it will not effect on your web-layout
        link.style = "visibility:hidden";
        link.download = fileName + ".csv";

        //this part will append the anchor tag and remove it after automatic click
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }
</script>