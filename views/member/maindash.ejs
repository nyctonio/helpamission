<main class="flex-1 overflow-x-hidden overflow-y-auto bg-gray-200">


    <div id="due-payment-notification" class="px-2 md:px-20 flex-col mt-8">
        <div class="-my-2 py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8">
            <div
                class=" align-middle inline-block min-w-full shadow overflow-hidden sm:rounded-lg border-b border-gray-200">
                <!-- component -->
                <div
                    class="relative flex flex-col sm:flex-row sm:items-center bg-white shadow rounded-md py-5 pl-6 pr-8 sm:pr-6">
                    <div class="flex flex-row items-center border-b sm:border-b-0 w-full sm:w-auto pb-4 sm:pb-0">
                        <div class="text-red-500">
                            <svg width="24" height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                                fill="currentColor" color="red">
                                <path
                                    d="M13 17.5a1 1 0 11-2 0 1 1 0 012 0zm-.25-8.25a.75.75 0 00-1.5 0v4.5a.75.75 0 001.5 0v-4.5z">
                                </path>
                                <path fill-rule="evenodd"
                                    d="M9.836 3.244c.963-1.665 3.365-1.665 4.328 0l8.967 15.504c.963 1.667-.24 3.752-2.165 3.752H3.034c-1.926 0-3.128-2.085-2.165-3.752L9.836 3.244zm3.03.751a1 1 0 00-1.732 0L2.168 19.499A1 1 0 003.034 21h17.932a1 1 0 00.866-1.5L12.866 3.994z">
                                </path>
                            </svg>
                        </div>
                        <div class="text-sm font-medium ml-3">Your Payment Is Due.</div>
                    </div>
                    <div class="text-sm tracking-wide text-gray-500 mt-4 sm:mt-0 sm:ml-4">Your Payment is Due.
                        Please complete your Payment!</div>
                    <div
                        class="absolute sm:relative sm:top-auto sm:right-auto ml-auto right-4 top-4 text-gray-400 hover:text-gray-800 cursor-pointer">
                        <!-- <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M6 18L18 6M6 6l12 12"></path>
                        </svg> -->
                    </div>
                </div>
            </div>

        </div>
    </div>




    <!-- component -->
    <style>
        @import url(https://cdnjs.cloudflare.com/ajax/libs/MaterialDesign-Webfont/5.3.45/css/materialdesignicons.min.css);
    </style>
    <style>
        .form-radio {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            -webkit-print-color-adjust: exact;
            color-adjust: exact;
            display: inline-block;
            vertical-align: middle;
            background-origin: border-box;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            flex-shrink: 0;
            border-radius: 100%;
            border-width: 2px;
        }

        .form-radio:checked {
            background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
            border-color: transparent;
            background-color: currentColor;
            background-size: 100% 100%;
            background-position: center;
            background-repeat: no-repeat;
        }

        @media not print {
            .form-radio::-ms-check {
                border-width: 1px;
                color: transparent;
                background: inherit;
                border-color: inherit;
                border-radius: inherit;
            }
        }

        .form-radio:focus {
            outline: none;
        }

        .form-select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23a0aec0'%3e%3cpath d='M15.3 9.3a1 1 0 0 1 1.4 1.4l-4 4a1 1 0 0 1-1.4 0l-4-4a1 1 0 0 1 1.4-1.4l3.3 3.29 3.3-3.3z'/%3e%3c/svg%3e");
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            -webkit-print-color-adjust: exact;
            color-adjust: exact;
            background-repeat: no-repeat;
            padding-top: 0.5rem;
            padding-right: 2.5rem;
            padding-bottom: 0.5rem;
            padding-left: 0.75rem;
            font-size: 1rem;
            line-height: 1.5;
            background-position: right 0.5rem center;
            background-size: 1.5em 1.5em;
        }

        .form-select::-ms-expand {
            color: #a0aec0;
            border: none;
        }

        @media not print {
            .form-select::-ms-expand {
                display: none;
            }
        }

        @media print and (-ms-high-contrast: active),
        print and (-ms-high-contrast: none) {
            .form-select {
                padding-right: 0.75rem;
            }
        }
    </style>

    <div id="due-payment-button" class="min-w-screen bg-gray-200 items-center justify-center px-5 pb-10 pt-16">
        <div class="w-full mx-auto rounded-lg bg-white shadow-lg p-5 text-gray-700" style="max-width: 600px">
            <div class="w-full pt-1 pb-5">
                <div
                    class="bg-indigo-500 text-white overflow-hidden rounded-full w-20 h-20 -mt-16 mx-auto shadow-lg flex justify-center items-center">
                    <i class="mdi mdi-credit-card-outline text-3xl"></i>
                </div>
            </div>
            <div class="mb-10">
                <h1 class="text-center font-bold text-xl uppercase">Due payment</h1>
            </div>
            <div>
                <form onsubmit="duepay()">
                    <button type="submit"
                        class="block w-full max-w-xs mx-auto bg-indigo-500 hover:bg-indigo-700 focus:bg-indigo-700 text-white rounded-lg px-3 py-3 font-semibold"><i
                            class="mdi mdi-lock-outline mr-1"></i> PAY NOW</button>
                </form>
            </div>
        </div>
    </div>

    <script>
        let memberdata = '<%- JSON.stringify(memberdata) %>';
        memberdata = JSON.parse(memberdata)
        console.log(memberdata);
        const paymentDisplay = (memberdata.paidStatus) ? 'hidden' : 'flex';
        document.getElementById('due-payment-notification').classList.add(paymentDisplay);
        document.getElementById('due-payment-button').classList.add(paymentDisplay);
    </script>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        async function duepay() {
            event.preventDefault();
            showTopLoader();
            // sending data to server
            let responseData = await fetch('/member/fixed-member-donation', {
                method: 'POST',
                headers: {
                    Accept: "application/json",
                    'Content-type': 'application/json'
                },
                body: JSON.stringify({})
            });
            let orderData = await responseData.json();
            // getting order id from server
            const orderId = orderData.order.id;
            const props = {
                data: { amount: orderData.fixedamount },
                orderId
            }
            pay(props);
        }
        async function pay({ data, orderId }) {
            hideTopLoader();
            const options = {
                "key": "rzp_test_GM8EczCZXXCl6Y",
                "amount": (data.amount * 100).toString(), // 2000 paise = INR 20
                "name": "Blood Donation",
                "description": "Donate Blood",
                "order_id": orderId,
                "image": "https://i.ibb.co/vJWLKZK/blood-donation.png",
                "handler": function (response) {
                    console.log(response);
                    const sendingdata = {
                        data,
                        orderId,
                        razorpay_payment_id: response.razorpay_payment_id,
                        razorpay_order_id: response.razorpay_order_id,
                        razorpay_signature: response.razorpay_signature
                    }
                    fetch('/member/fixed-member-donation/verify', {
                        method: 'POST',
                        cache: 'no-cache',
                        headers: {
                            'Content-type': 'application/json'
                        },
                        body: JSON.stringify(sendingdata)
                    }).then(res => {
                        console.log(res.body);
                        if (res.status === 200) {
                            console.log('passed');
                            alert("success");
                            // alert('Payment Successful');
                        } else {
                            console.log('failed')
                            alert("failure");
                            // alert('Payment Failed');
                        }
                    }).catch(err => {
                        alert("failure");
                        console.log('not sucsess');
                    })
                },
                "notes": {
                    "address": "Hello World"
                },
                "theme": {
                    "color": "#F37254"
                }
            };
            const rzp1 = new Razorpay(options);
            rzp1.open();
        }
    </script>

    <!-- component -->
    <div id="container" class="w-4/5 mx-auto">
        <div class="flex flex-col md:flex-row justify-between">
            <!-- Card 1 -->
            <div class="bg-white px-6 py-8 rounded-lg shadow-lg my-2 border-b-2 border-black text-center">
                <h2 class="text-xl text-bold text-black font-thin">Members Added <span>
                        <%-memberdata.addedMembers%>
                    </span> </h2>
            </div>
            <!-- Card 2 -->
            <div class="bg-white px-6 py-8 rounded-lg shadow-lg my-2 border-b-2 border-black text-center">
                <h2 class="text-xl text-bold text-black font-thin">Own Donations <span>
                        <%-memberdata.ownDonations%>₹
                    </span> </h2>
            </div>
            <!-- Card 3 -->
            <div class="bg-white px-6 py-8 rounded-lg shadow-lg my-2 border-b-2 border-black text-center">
                <h2 class="text-xl text-bold text-black font-thin">Other Donationss <span>
                        <%-memberdata.otherDonations%>₹
                    </span> </h2>
            </div>
        </div>
    </div>

    <div class="min-w-screen bg-gray-200 flex items-center justify-center px-5 pb-10 pt-16">
        <div class="w-full mx-auto rounded-lg bg-white shadow-lg p-5 text-gray-700" style="max-width: 600px">
            <div class="w-full pt-1 pb-5">
                <div
                    class="bg-indigo-500 text-white overflow-hidden rounded-full w-20 h-20 -mt-16 mx-auto shadow-lg flex justify-center items-center">
                    <i class="mdi mdi-credit-card-outline text-3xl"></i>
                </div>
            </div>
            <form onsubmit="willpay()">
                <div class="mb-10 flex flex-col justify-center items-center">
                    <h1 class="text-center font-bold text-xl mb-5 uppercase">Donate On Your Will</h1>
                    <input placeholder="Amount" id="willpayamount"
                        class="appearance-none block bg-grey-lighter text-grey-darker border border-grey-lighter rounded-lg h-10 px-4"
                        name="contact" type="number">
                </div>

                <div>
                    <button type="submit"
                        class="block w-full max-w-xs mx-auto bg-indigo-500 hover:bg-indigo-700 focus:bg-indigo-700 text-white rounded-lg px-3 py-3 font-semibold"><i
                            class="mdi mdi-lock-outline mr-1"></i> PAY NOW</button>
                </div>
            </form>
        </div>
    </div>



    </div>
</main>


<script>
    async function willpay() {
        event.preventDefault();
        const willamount = document.getElementById('willpayamount').value;
        showTopLoader();
        // sending data to server
        let responseData = await fetch('/member/normal-member-donation', {
            method: 'POST',
            headers: {
                Accept: "application/json",
                'Content-type': 'application/json'
            },
            body: JSON.stringify({ amount: willamount })
        });
        let orderData = await responseData.json();
        // getting order id from server
        const orderId = orderData.order.id;
        const props = {
            data: { amount: orderData.amount },
            orderId
        }
        payonwill(props);
    }
    async function payonwill({ data, orderId }) {
        hideTopLoader();
        console.log(data.amount);
        const options = {
            "key": "rzp_test_GM8EczCZXXCl6Y",
            "amount": (data.amount * 100).toString(), // 2000 paise = INR 20
            "name": "Blood Donation",
            "description": "Donate Blood",
            "order_id": orderId,
            "image": "https://i.ibb.co/vJWLKZK/blood-donation.png",
            "handler": function (response) {
                console.log(response);
                const sendingdata = {
                    data: { amount: data.amount },
                    orderId,
                    razorpay_payment_id: response.razorpay_payment_id,
                    razorpay_order_id: response.razorpay_order_id,
                    razorpay_signature: response.razorpay_signature
                }
                fetch('/member/normal-member-donation/verify', {
                    method: 'POST',
                    cache: 'no-cache',
                    headers: {
                        'Content-type': 'application/json'
                    },
                    body: JSON.stringify(sendingdata)
                }).then(res => {
                    console.log(res.body);
                    if (res.status === 200) {
                        console.log('passed');
                        alert("success");
                        // alert('Payment Successful');
                    } else {
                        console.log('failed')
                        alert("failure");
                        // alert('Payment Failed');
                    }

                    document.getElementById('willpayamount').value = "";

                }).catch(err => {
                    alert("failure");
                    console.log('not sucsess');
                })
            },
            "notes": {
                "address": "Hello World"
            },
            "theme": {
                "color": "#F37254"
            }
        };
        const rzp2 = new Razorpay(options);
        rzp2.open();
    }

</script>